# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7.4

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - python -m venv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip install -e .


test:
  stage: test
  script:
     - pip install pytest pytest-cov
     - coverage run -m pytest
     - coverage report
     - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

#build_and_publish:
#  stage: build
#  script:
#    - pip install poetry
#    - poetry config pypi-token.pypi ${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token http-basic.foo ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
#    - poetry build
#    - poetry publish
#  only:
#    refs:
#      - master
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /#release/
#  artifacts:
#    paths:
#      - dist/*.whl
#      - dist/*.tar.gz



run:
  script:
    - pip install poetry
    - poetry build
#    - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/pypi"
#    - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
#    - poetry publish --repository gitlab
    - poetry config pypi-token.pypi $PYPI_TOKEN
    - poetry publish
#    - pip install build twine
#    - python -m build
#    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  artifacts:
    paths:
      - dist/*
  only:
#      refs:
#        - master
      variables:
        - $CI_COMMIT_MESSAGE =~ /#release/

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc
#    - make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
